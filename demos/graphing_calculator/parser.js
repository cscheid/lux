peg_parser = (function(){
  /* Generated by PEG.js 0.6.2 (http://pegjs.majda.cz/). */
  
  var result = {
    /*
     * Parses the input with a generated parser. If the parsing is successfull,
     * returns a value explicitly or implicitly specified by the grammar from
     * which the parser was generated (see |PEG.buildParser|). If the parsing is
     * unsuccessful, throws |PEG.parser.SyntaxError| describing the error.
     */
    parse: function(input, startRule) {
      var parseFunctions = {
        "additive": parse_additive,
        "multiplicative": parse_multiplicative,
        "number": parse_number,
        "primary": parse_primary,
        "start": parse_start
      };
      
      if (startRule !== undefined) {
        if (parseFunctions[startRule] === undefined) {
          throw new Error("Invalid rule name: " + quote(startRule) + ".");
        }
      } else {
        startRule = "start";
      }
      
      var pos = 0;
      var reportMatchFailures = true;
      var rightmostMatchFailuresPos = 0;
      var rightmostMatchFailuresExpected = [];
      var cache = {};
      
      function padLeft(input, padding, length) {
        var result = input;
        
        var padLength = length - input.length;
        for (var i = 0; i < padLength; i++) {
          result = padding + result;
        }
        
        return result;
      }
      
      function escape(ch) {
        var charCode = ch.charCodeAt(0);
        
        if (charCode <= 0xFF) {
          var escapeChar = 'x';
          var length = 2;
        } else {
          var escapeChar = 'u';
          var length = 4;
        }
        
        return '\\' + escapeChar + padLeft(charCode.toString(16).toUpperCase(), '0', length);
      }
      
      function quote(s) {
        /*
         * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a
         * string literal except for the closing quote character, backslash,
         * carriage return, line separator, paragraph separator, and line feed.
         * Any character may appear in the form of an escape sequence.
         */
        return '"' + s
          .replace(/\\/g, '\\\\')            // backslash
          .replace(/"/g, '\\"')              // closing quote character
          .replace(/\r/g, '\\r')             // carriage return
          .replace(/\n/g, '\\n')             // line feed
          .replace(/[\x80-\uFFFF]/g, escape) // non-ASCII characters
          + '"';
      }
      
      function matchFailed(failure) {
        if (pos < rightmostMatchFailuresPos) {
          return;
        }
        
        if (pos > rightmostMatchFailuresPos) {
          rightmostMatchFailuresPos = pos;
          rightmostMatchFailuresExpected = [];
        }
        
        rightmostMatchFailuresExpected.push(failure);
      }
      
      function parse_start() {
        var cacheKey = 'start@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos4 = pos;
        var savedPos5 = pos;
        var result62 = [];
        if (input.substr(pos, 1) === " ") {
          var result66 = " ";
          pos += 1;
        } else {
          var result66 = null;
          if (reportMatchFailures) {
            matchFailed("\" \"");
          }
        }
        while (result66 !== null) {
          result62.push(result66);
          if (input.substr(pos, 1) === " ") {
            var result66 = " ";
            pos += 1;
          } else {
            var result66 = null;
            if (reportMatchFailures) {
              matchFailed("\" \"");
            }
          }
        }
        if (result62 !== null) {
          var result63 = parse_additive();
          if (result63 !== null) {
            var result64 = [];
            if (input.substr(pos, 1) === " ") {
              var result65 = " ";
              pos += 1;
            } else {
              var result65 = null;
              if (reportMatchFailures) {
                matchFailed("\" \"");
              }
            }
            while (result65 !== null) {
              result64.push(result65);
              if (input.substr(pos, 1) === " ") {
                var result65 = " ";
                pos += 1;
              } else {
                var result65 = null;
                if (reportMatchFailures) {
                  matchFailed("\" \"");
                }
              }
            }
            if (result64 !== null) {
              var result60 = [result62, result63, result64];
            } else {
              var result60 = null;
              pos = savedPos5;
            }
          } else {
            var result60 = null;
            pos = savedPos5;
          }
        } else {
          var result60 = null;
          pos = savedPos5;
        }
        var result61 = result60 !== null
          ? (function(additive) { return additive; })(result60[1])
          : null;
        if (result61 !== null) {
          var result59 = result61;
        } else {
          var result59 = null;
          pos = savedPos4;
        }
        if (result59 !== null) {
          var result0 = result59;
        } else {
          var savedPos2 = pos;
          var savedPos3 = pos;
          var result33 = [];
          if (input.substr(pos, 1) === " ") {
            var result58 = " ";
            pos += 1;
          } else {
            var result58 = null;
            if (reportMatchFailures) {
              matchFailed("\" \"");
            }
          }
          while (result58 !== null) {
            result33.push(result58);
            if (input.substr(pos, 1) === " ") {
              var result58 = " ";
              pos += 1;
            } else {
              var result58 = null;
              if (reportMatchFailures) {
                matchFailed("\" \"");
              }
            }
          }
          if (result33 !== null) {
            if (input.substr(pos, 3) === "rgb") {
              var result34 = "rgb";
              pos += 3;
            } else {
              var result34 = null;
              if (reportMatchFailures) {
                matchFailed("\"rgb\"");
              }
            }
            if (result34 !== null) {
              var result35 = [];
              if (input.substr(pos, 1) === " ") {
                var result57 = " ";
                pos += 1;
              } else {
                var result57 = null;
                if (reportMatchFailures) {
                  matchFailed("\" \"");
                }
              }
              while (result57 !== null) {
                result35.push(result57);
                if (input.substr(pos, 1) === " ") {
                  var result57 = " ";
                  pos += 1;
                } else {
                  var result57 = null;
                  if (reportMatchFailures) {
                    matchFailed("\" \"");
                  }
                }
              }
              if (result35 !== null) {
                if (input.substr(pos, 1) === "(") {
                  var result36 = "(";
                  pos += 1;
                } else {
                  var result36 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"(\"");
                  }
                }
                if (result36 !== null) {
                  var result37 = [];
                  if (input.substr(pos, 1) === " ") {
                    var result56 = " ";
                    pos += 1;
                  } else {
                    var result56 = null;
                    if (reportMatchFailures) {
                      matchFailed("\" \"");
                    }
                  }
                  while (result56 !== null) {
                    result37.push(result56);
                    if (input.substr(pos, 1) === " ") {
                      var result56 = " ";
                      pos += 1;
                    } else {
                      var result56 = null;
                      if (reportMatchFailures) {
                        matchFailed("\" \"");
                      }
                    }
                  }
                  if (result37 !== null) {
                    var result38 = parse_additive();
                    if (result38 !== null) {
                      var result39 = [];
                      if (input.substr(pos, 1) === " ") {
                        var result55 = " ";
                        pos += 1;
                      } else {
                        var result55 = null;
                        if (reportMatchFailures) {
                          matchFailed("\" \"");
                        }
                      }
                      while (result55 !== null) {
                        result39.push(result55);
                        if (input.substr(pos, 1) === " ") {
                          var result55 = " ";
                          pos += 1;
                        } else {
                          var result55 = null;
                          if (reportMatchFailures) {
                            matchFailed("\" \"");
                          }
                        }
                      }
                      if (result39 !== null) {
                        if (input.substr(pos, 1) === ",") {
                          var result40 = ",";
                          pos += 1;
                        } else {
                          var result40 = null;
                          if (reportMatchFailures) {
                            matchFailed("\",\"");
                          }
                        }
                        if (result40 !== null) {
                          var result41 = [];
                          if (input.substr(pos, 1) === " ") {
                            var result54 = " ";
                            pos += 1;
                          } else {
                            var result54 = null;
                            if (reportMatchFailures) {
                              matchFailed("\" \"");
                            }
                          }
                          while (result54 !== null) {
                            result41.push(result54);
                            if (input.substr(pos, 1) === " ") {
                              var result54 = " ";
                              pos += 1;
                            } else {
                              var result54 = null;
                              if (reportMatchFailures) {
                                matchFailed("\" \"");
                              }
                            }
                          }
                          if (result41 !== null) {
                            var result42 = parse_additive();
                            if (result42 !== null) {
                              var result43 = [];
                              if (input.substr(pos, 1) === " ") {
                                var result53 = " ";
                                pos += 1;
                              } else {
                                var result53 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\" \"");
                                }
                              }
                              while (result53 !== null) {
                                result43.push(result53);
                                if (input.substr(pos, 1) === " ") {
                                  var result53 = " ";
                                  pos += 1;
                                } else {
                                  var result53 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\" \"");
                                  }
                                }
                              }
                              if (result43 !== null) {
                                if (input.substr(pos, 1) === ",") {
                                  var result44 = ",";
                                  pos += 1;
                                } else {
                                  var result44 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\",\"");
                                  }
                                }
                                if (result44 !== null) {
                                  var result45 = [];
                                  if (input.substr(pos, 1) === " ") {
                                    var result52 = " ";
                                    pos += 1;
                                  } else {
                                    var result52 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\" \"");
                                    }
                                  }
                                  while (result52 !== null) {
                                    result45.push(result52);
                                    if (input.substr(pos, 1) === " ") {
                                      var result52 = " ";
                                      pos += 1;
                                    } else {
                                      var result52 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\" \"");
                                      }
                                    }
                                  }
                                  if (result45 !== null) {
                                    var result46 = parse_additive();
                                    if (result46 !== null) {
                                      var result47 = [];
                                      if (input.substr(pos, 1) === " ") {
                                        var result51 = " ";
                                        pos += 1;
                                      } else {
                                        var result51 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\" \"");
                                        }
                                      }
                                      while (result51 !== null) {
                                        result47.push(result51);
                                        if (input.substr(pos, 1) === " ") {
                                          var result51 = " ";
                                          pos += 1;
                                        } else {
                                          var result51 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\" \"");
                                          }
                                        }
                                      }
                                      if (result47 !== null) {
                                        if (input.substr(pos, 1) === ")") {
                                          var result48 = ")";
                                          pos += 1;
                                        } else {
                                          var result48 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\")\"");
                                          }
                                        }
                                        if (result48 !== null) {
                                          var result49 = [];
                                          if (input.substr(pos, 1) === " ") {
                                            var result50 = " ";
                                            pos += 1;
                                          } else {
                                            var result50 = null;
                                            if (reportMatchFailures) {
                                              matchFailed("\" \"");
                                            }
                                          }
                                          while (result50 !== null) {
                                            result49.push(result50);
                                            if (input.substr(pos, 1) === " ") {
                                              var result50 = " ";
                                              pos += 1;
                                            } else {
                                              var result50 = null;
                                              if (reportMatchFailures) {
                                                matchFailed("\" \"");
                                              }
                                            }
                                          }
                                          if (result49 !== null) {
                                            var result31 = [result33, result34, result35, result36, result37, result38, result39, result40, result41, result42, result43, result44, result45, result46, result47, result48, result49];
                                          } else {
                                            var result31 = null;
                                            pos = savedPos3;
                                          }
                                        } else {
                                          var result31 = null;
                                          pos = savedPos3;
                                        }
                                      } else {
                                        var result31 = null;
                                        pos = savedPos3;
                                      }
                                    } else {
                                      var result31 = null;
                                      pos = savedPos3;
                                    }
                                  } else {
                                    var result31 = null;
                                    pos = savedPos3;
                                  }
                                } else {
                                  var result31 = null;
                                  pos = savedPos3;
                                }
                              } else {
                                var result31 = null;
                                pos = savedPos3;
                              }
                            } else {
                              var result31 = null;
                              pos = savedPos3;
                            }
                          } else {
                            var result31 = null;
                            pos = savedPos3;
                          }
                        } else {
                          var result31 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result31 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result31 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result31 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result31 = null;
                  pos = savedPos3;
                }
              } else {
                var result31 = null;
                pos = savedPos3;
              }
            } else {
              var result31 = null;
              pos = savedPos3;
            }
          } else {
            var result31 = null;
            pos = savedPos3;
          }
          var result32 = result31 !== null
            ? (function(r, g, b) { return Shade.Colors.rgb(r, g, b); })(result31[5], result31[9], result31[13])
            : null;
          if (result32 !== null) {
            var result30 = result32;
          } else {
            var result30 = null;
            pos = savedPos2;
          }
          if (result30 !== null) {
            var result0 = result30;
          } else {
            var savedPos0 = pos;
            var savedPos1 = pos;
            var result4 = [];
            if (input.substr(pos, 1) === " ") {
              var result29 = " ";
              pos += 1;
            } else {
              var result29 = null;
              if (reportMatchFailures) {
                matchFailed("\" \"");
              }
            }
            while (result29 !== null) {
              result4.push(result29);
              if (input.substr(pos, 1) === " ") {
                var result29 = " ";
                pos += 1;
              } else {
                var result29 = null;
                if (reportMatchFailures) {
                  matchFailed("\" \"");
                }
              }
            }
            if (result4 !== null) {
              if (input.substr(pos, 3) === "hcl") {
                var result5 = "hcl";
                pos += 3;
              } else {
                var result5 = null;
                if (reportMatchFailures) {
                  matchFailed("\"hcl\"");
                }
              }
              if (result5 !== null) {
                var result6 = [];
                if (input.substr(pos, 1) === " ") {
                  var result28 = " ";
                  pos += 1;
                } else {
                  var result28 = null;
                  if (reportMatchFailures) {
                    matchFailed("\" \"");
                  }
                }
                while (result28 !== null) {
                  result6.push(result28);
                  if (input.substr(pos, 1) === " ") {
                    var result28 = " ";
                    pos += 1;
                  } else {
                    var result28 = null;
                    if (reportMatchFailures) {
                      matchFailed("\" \"");
                    }
                  }
                }
                if (result6 !== null) {
                  if (input.substr(pos, 1) === "(") {
                    var result7 = "(";
                    pos += 1;
                  } else {
                    var result7 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"(\"");
                    }
                  }
                  if (result7 !== null) {
                    var result8 = [];
                    if (input.substr(pos, 1) === " ") {
                      var result27 = " ";
                      pos += 1;
                    } else {
                      var result27 = null;
                      if (reportMatchFailures) {
                        matchFailed("\" \"");
                      }
                    }
                    while (result27 !== null) {
                      result8.push(result27);
                      if (input.substr(pos, 1) === " ") {
                        var result27 = " ";
                        pos += 1;
                      } else {
                        var result27 = null;
                        if (reportMatchFailures) {
                          matchFailed("\" \"");
                        }
                      }
                    }
                    if (result8 !== null) {
                      var result9 = parse_additive();
                      if (result9 !== null) {
                        var result10 = [];
                        if (input.substr(pos, 1) === " ") {
                          var result26 = " ";
                          pos += 1;
                        } else {
                          var result26 = null;
                          if (reportMatchFailures) {
                            matchFailed("\" \"");
                          }
                        }
                        while (result26 !== null) {
                          result10.push(result26);
                          if (input.substr(pos, 1) === " ") {
                            var result26 = " ";
                            pos += 1;
                          } else {
                            var result26 = null;
                            if (reportMatchFailures) {
                              matchFailed("\" \"");
                            }
                          }
                        }
                        if (result10 !== null) {
                          if (input.substr(pos, 1) === ",") {
                            var result11 = ",";
                            pos += 1;
                          } else {
                            var result11 = null;
                            if (reportMatchFailures) {
                              matchFailed("\",\"");
                            }
                          }
                          if (result11 !== null) {
                            var result12 = [];
                            if (input.substr(pos, 1) === " ") {
                              var result25 = " ";
                              pos += 1;
                            } else {
                              var result25 = null;
                              if (reportMatchFailures) {
                                matchFailed("\" \"");
                              }
                            }
                            while (result25 !== null) {
                              result12.push(result25);
                              if (input.substr(pos, 1) === " ") {
                                var result25 = " ";
                                pos += 1;
                              } else {
                                var result25 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\" \"");
                                }
                              }
                            }
                            if (result12 !== null) {
                              var result13 = parse_additive();
                              if (result13 !== null) {
                                var result14 = [];
                                if (input.substr(pos, 1) === " ") {
                                  var result24 = " ";
                                  pos += 1;
                                } else {
                                  var result24 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\" \"");
                                  }
                                }
                                while (result24 !== null) {
                                  result14.push(result24);
                                  if (input.substr(pos, 1) === " ") {
                                    var result24 = " ";
                                    pos += 1;
                                  } else {
                                    var result24 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\" \"");
                                    }
                                  }
                                }
                                if (result14 !== null) {
                                  if (input.substr(pos, 1) === ",") {
                                    var result15 = ",";
                                    pos += 1;
                                  } else {
                                    var result15 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\",\"");
                                    }
                                  }
                                  if (result15 !== null) {
                                    var result16 = [];
                                    if (input.substr(pos, 1) === " ") {
                                      var result23 = " ";
                                      pos += 1;
                                    } else {
                                      var result23 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\" \"");
                                      }
                                    }
                                    while (result23 !== null) {
                                      result16.push(result23);
                                      if (input.substr(pos, 1) === " ") {
                                        var result23 = " ";
                                        pos += 1;
                                      } else {
                                        var result23 = null;
                                        if (reportMatchFailures) {
                                          matchFailed("\" \"");
                                        }
                                      }
                                    }
                                    if (result16 !== null) {
                                      var result17 = parse_additive();
                                      if (result17 !== null) {
                                        var result18 = [];
                                        if (input.substr(pos, 1) === " ") {
                                          var result22 = " ";
                                          pos += 1;
                                        } else {
                                          var result22 = null;
                                          if (reportMatchFailures) {
                                            matchFailed("\" \"");
                                          }
                                        }
                                        while (result22 !== null) {
                                          result18.push(result22);
                                          if (input.substr(pos, 1) === " ") {
                                            var result22 = " ";
                                            pos += 1;
                                          } else {
                                            var result22 = null;
                                            if (reportMatchFailures) {
                                              matchFailed("\" \"");
                                            }
                                          }
                                        }
                                        if (result18 !== null) {
                                          if (input.substr(pos, 1) === ")") {
                                            var result19 = ")";
                                            pos += 1;
                                          } else {
                                            var result19 = null;
                                            if (reportMatchFailures) {
                                              matchFailed("\")\"");
                                            }
                                          }
                                          if (result19 !== null) {
                                            var result20 = [];
                                            if (input.substr(pos, 1) === " ") {
                                              var result21 = " ";
                                              pos += 1;
                                            } else {
                                              var result21 = null;
                                              if (reportMatchFailures) {
                                                matchFailed("\" \"");
                                              }
                                            }
                                            while (result21 !== null) {
                                              result20.push(result21);
                                              if (input.substr(pos, 1) === " ") {
                                                var result21 = " ";
                                                pos += 1;
                                              } else {
                                                var result21 = null;
                                                if (reportMatchFailures) {
                                                  matchFailed("\" \"");
                                                }
                                              }
                                            }
                                            if (result20 !== null) {
                                              var result2 = [result4, result5, result6, result7, result8, result9, result10, result11, result12, result13, result14, result15, result16, result17, result18, result19, result20];
                                            } else {
                                              var result2 = null;
                                              pos = savedPos1;
                                            }
                                          } else {
                                            var result2 = null;
                                            pos = savedPos1;
                                          }
                                        } else {
                                          var result2 = null;
                                          pos = savedPos1;
                                        }
                                      } else {
                                        var result2 = null;
                                        pos = savedPos1;
                                      }
                                    } else {
                                      var result2 = null;
                                      pos = savedPos1;
                                    }
                                  } else {
                                    var result2 = null;
                                    pos = savedPos1;
                                  }
                                } else {
                                  var result2 = null;
                                  pos = savedPos1;
                                }
                              } else {
                                var result2 = null;
                                pos = savedPos1;
                              }
                            } else {
                              var result2 = null;
                              pos = savedPos1;
                            }
                          } else {
                            var result2 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result2 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result2 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result2 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result2 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
            } else {
              var result2 = null;
              pos = savedPos1;
            }
            var result3 = result2 !== null
              ? (function(h, c, l) { return Shade.Colors.hcl(h, c, l); })(result2[5], result2[9], result2[13])
              : null;
            if (result3 !== null) {
              var result1 = result3;
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_additive() {
        var cacheKey = 'additive@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos2 = pos;
        var savedPos3 = pos;
        var result15 = parse_multiplicative();
        if (result15 !== null) {
          var result16 = [];
          if (input.substr(pos, 1) === " ") {
            var result21 = " ";
            pos += 1;
          } else {
            var result21 = null;
            if (reportMatchFailures) {
              matchFailed("\" \"");
            }
          }
          while (result21 !== null) {
            result16.push(result21);
            if (input.substr(pos, 1) === " ") {
              var result21 = " ";
              pos += 1;
            } else {
              var result21 = null;
              if (reportMatchFailures) {
                matchFailed("\" \"");
              }
            }
          }
          if (result16 !== null) {
            if (input.substr(pos, 1) === "+") {
              var result17 = "+";
              pos += 1;
            } else {
              var result17 = null;
              if (reportMatchFailures) {
                matchFailed("\"+\"");
              }
            }
            if (result17 !== null) {
              var result18 = [];
              if (input.substr(pos, 1) === " ") {
                var result20 = " ";
                pos += 1;
              } else {
                var result20 = null;
                if (reportMatchFailures) {
                  matchFailed("\" \"");
                }
              }
              while (result20 !== null) {
                result18.push(result20);
                if (input.substr(pos, 1) === " ") {
                  var result20 = " ";
                  pos += 1;
                } else {
                  var result20 = null;
                  if (reportMatchFailures) {
                    matchFailed("\" \"");
                  }
                }
              }
              if (result18 !== null) {
                var result19 = parse_additive();
                if (result19 !== null) {
                  var result13 = [result15, result16, result17, result18, result19];
                } else {
                  var result13 = null;
                  pos = savedPos3;
                }
              } else {
                var result13 = null;
                pos = savedPos3;
              }
            } else {
              var result13 = null;
              pos = savedPos3;
            }
          } else {
            var result13 = null;
            pos = savedPos3;
          }
        } else {
          var result13 = null;
          pos = savedPos3;
        }
        var result14 = result13 !== null
          ? (function(left, right) { return Shade.add(left, right); })(result13[0], result13[4])
          : null;
        if (result14 !== null) {
          var result12 = result14;
        } else {
          var result12 = null;
          pos = savedPos2;
        }
        if (result12 !== null) {
          var result0 = result12;
        } else {
          var savedPos0 = pos;
          var savedPos1 = pos;
          var result5 = parse_multiplicative();
          if (result5 !== null) {
            var result6 = [];
            if (input.substr(pos, 1) === " ") {
              var result11 = " ";
              pos += 1;
            } else {
              var result11 = null;
              if (reportMatchFailures) {
                matchFailed("\" \"");
              }
            }
            while (result11 !== null) {
              result6.push(result11);
              if (input.substr(pos, 1) === " ") {
                var result11 = " ";
                pos += 1;
              } else {
                var result11 = null;
                if (reportMatchFailures) {
                  matchFailed("\" \"");
                }
              }
            }
            if (result6 !== null) {
              if (input.substr(pos, 1) === "-") {
                var result7 = "-";
                pos += 1;
              } else {
                var result7 = null;
                if (reportMatchFailures) {
                  matchFailed("\"-\"");
                }
              }
              if (result7 !== null) {
                var result8 = [];
                if (input.substr(pos, 1) === " ") {
                  var result10 = " ";
                  pos += 1;
                } else {
                  var result10 = null;
                  if (reportMatchFailures) {
                    matchFailed("\" \"");
                  }
                }
                while (result10 !== null) {
                  result8.push(result10);
                  if (input.substr(pos, 1) === " ") {
                    var result10 = " ";
                    pos += 1;
                  } else {
                    var result10 = null;
                    if (reportMatchFailures) {
                      matchFailed("\" \"");
                    }
                  }
                }
                if (result8 !== null) {
                  var result9 = parse_additive();
                  if (result9 !== null) {
                    var result3 = [result5, result6, result7, result8, result9];
                  } else {
                    var result3 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result3 = null;
                  pos = savedPos1;
                }
              } else {
                var result3 = null;
                pos = savedPos1;
              }
            } else {
              var result3 = null;
              pos = savedPos1;
            }
          } else {
            var result3 = null;
            pos = savedPos1;
          }
          var result4 = result3 !== null
            ? (function(left, right) { return Shade.sub(left, right); })(result3[0], result3[4])
            : null;
          if (result4 !== null) {
            var result2 = result4;
          } else {
            var result2 = null;
            pos = savedPos0;
          }
          if (result2 !== null) {
            var result0 = result2;
          } else {
            var result1 = parse_multiplicative();
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_multiplicative() {
        var cacheKey = 'multiplicative@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos4 = pos;
        var savedPos5 = pos;
        var result25 = parse_primary();
        if (result25 !== null) {
          var result26 = [];
          if (input.substr(pos, 1) === " ") {
            var result31 = " ";
            pos += 1;
          } else {
            var result31 = null;
            if (reportMatchFailures) {
              matchFailed("\" \"");
            }
          }
          while (result31 !== null) {
            result26.push(result31);
            if (input.substr(pos, 1) === " ") {
              var result31 = " ";
              pos += 1;
            } else {
              var result31 = null;
              if (reportMatchFailures) {
                matchFailed("\" \"");
              }
            }
          }
          if (result26 !== null) {
            if (input.substr(pos, 1) === "*") {
              var result27 = "*";
              pos += 1;
            } else {
              var result27 = null;
              if (reportMatchFailures) {
                matchFailed("\"*\"");
              }
            }
            if (result27 !== null) {
              var result28 = [];
              if (input.substr(pos, 1) === " ") {
                var result30 = " ";
                pos += 1;
              } else {
                var result30 = null;
                if (reportMatchFailures) {
                  matchFailed("\" \"");
                }
              }
              while (result30 !== null) {
                result28.push(result30);
                if (input.substr(pos, 1) === " ") {
                  var result30 = " ";
                  pos += 1;
                } else {
                  var result30 = null;
                  if (reportMatchFailures) {
                    matchFailed("\" \"");
                  }
                }
              }
              if (result28 !== null) {
                var result29 = parse_multiplicative();
                if (result29 !== null) {
                  var result23 = [result25, result26, result27, result28, result29];
                } else {
                  var result23 = null;
                  pos = savedPos5;
                }
              } else {
                var result23 = null;
                pos = savedPos5;
              }
            } else {
              var result23 = null;
              pos = savedPos5;
            }
          } else {
            var result23 = null;
            pos = savedPos5;
          }
        } else {
          var result23 = null;
          pos = savedPos5;
        }
        var result24 = result23 !== null
          ? (function(left, right) { return Shade.mul(left, right); })(result23[0], result23[4])
          : null;
        if (result24 !== null) {
          var result22 = result24;
        } else {
          var result22 = null;
          pos = savedPos4;
        }
        if (result22 !== null) {
          var result0 = result22;
        } else {
          var savedPos2 = pos;
          var savedPos3 = pos;
          var result15 = parse_primary();
          if (result15 !== null) {
            var result16 = [];
            if (input.substr(pos, 1) === " ") {
              var result21 = " ";
              pos += 1;
            } else {
              var result21 = null;
              if (reportMatchFailures) {
                matchFailed("\" \"");
              }
            }
            while (result21 !== null) {
              result16.push(result21);
              if (input.substr(pos, 1) === " ") {
                var result21 = " ";
                pos += 1;
              } else {
                var result21 = null;
                if (reportMatchFailures) {
                  matchFailed("\" \"");
                }
              }
            }
            if (result16 !== null) {
              if (input.substr(pos, 1) === "/") {
                var result17 = "/";
                pos += 1;
              } else {
                var result17 = null;
                if (reportMatchFailures) {
                  matchFailed("\"/\"");
                }
              }
              if (result17 !== null) {
                var result18 = [];
                if (input.substr(pos, 1) === " ") {
                  var result20 = " ";
                  pos += 1;
                } else {
                  var result20 = null;
                  if (reportMatchFailures) {
                    matchFailed("\" \"");
                  }
                }
                while (result20 !== null) {
                  result18.push(result20);
                  if (input.substr(pos, 1) === " ") {
                    var result20 = " ";
                    pos += 1;
                  } else {
                    var result20 = null;
                    if (reportMatchFailures) {
                      matchFailed("\" \"");
                    }
                  }
                }
                if (result18 !== null) {
                  var result19 = parse_multiplicative();
                  if (result19 !== null) {
                    var result13 = [result15, result16, result17, result18, result19];
                  } else {
                    var result13 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result13 = null;
                  pos = savedPos3;
                }
              } else {
                var result13 = null;
                pos = savedPos3;
              }
            } else {
              var result13 = null;
              pos = savedPos3;
            }
          } else {
            var result13 = null;
            pos = savedPos3;
          }
          var result14 = result13 !== null
            ? (function(left, right) { return Shade.div(left, right); })(result13[0], result13[4])
            : null;
          if (result14 !== null) {
            var result12 = result14;
          } else {
            var result12 = null;
            pos = savedPos2;
          }
          if (result12 !== null) {
            var result0 = result12;
          } else {
            var savedPos0 = pos;
            var savedPos1 = pos;
            var result5 = parse_primary();
            if (result5 !== null) {
              var result6 = [];
              if (input.substr(pos, 1) === " ") {
                var result11 = " ";
                pos += 1;
              } else {
                var result11 = null;
                if (reportMatchFailures) {
                  matchFailed("\" \"");
                }
              }
              while (result11 !== null) {
                result6.push(result11);
                if (input.substr(pos, 1) === " ") {
                  var result11 = " ";
                  pos += 1;
                } else {
                  var result11 = null;
                  if (reportMatchFailures) {
                    matchFailed("\" \"");
                  }
                }
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "%") {
                  var result7 = "%";
                  pos += 1;
                } else {
                  var result7 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"%\"");
                  }
                }
                if (result7 !== null) {
                  var result8 = [];
                  if (input.substr(pos, 1) === " ") {
                    var result10 = " ";
                    pos += 1;
                  } else {
                    var result10 = null;
                    if (reportMatchFailures) {
                      matchFailed("\" \"");
                    }
                  }
                  while (result10 !== null) {
                    result8.push(result10);
                    if (input.substr(pos, 1) === " ") {
                      var result10 = " ";
                      pos += 1;
                    } else {
                      var result10 = null;
                      if (reportMatchFailures) {
                        matchFailed("\" \"");
                      }
                    }
                  }
                  if (result8 !== null) {
                    var result9 = parse_multiplicative();
                    if (result9 !== null) {
                      var result3 = [result5, result6, result7, result8, result9];
                    } else {
                      var result3 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result3 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result3 = null;
                  pos = savedPos1;
                }
              } else {
                var result3 = null;
                pos = savedPos1;
              }
            } else {
              var result3 = null;
              pos = savedPos1;
            }
            var result4 = result3 !== null
              ? (function(left, right) { return Shade.mod(left, right); })(result3[0], result3[4])
              : null;
            if (result4 !== null) {
              var result2 = result4;
            } else {
              var result2 = null;
              pos = savedPos0;
            }
            if (result2 !== null) {
              var result0 = result2;
            } else {
              var result1 = parse_primary();
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_primary() {
        var cacheKey = 'primary@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos21 = pos;
        var savedPos22 = pos;
        var result95 = [];
        if (input.substr(pos, 1) === " ") {
          var result99 = " ";
          pos += 1;
        } else {
          var result99 = null;
          if (reportMatchFailures) {
            matchFailed("\" \"");
          }
        }
        while (result99 !== null) {
          result95.push(result99);
          if (input.substr(pos, 1) === " ") {
            var result99 = " ";
            pos += 1;
          } else {
            var result99 = null;
            if (reportMatchFailures) {
              matchFailed("\" \"");
            }
          }
        }
        if (result95 !== null) {
          if (input.substr(pos, 1) === "u") {
            var result96 = "u";
            pos += 1;
          } else {
            var result96 = null;
            if (reportMatchFailures) {
              matchFailed("\"u\"");
            }
          }
          if (result96 !== null) {
            var result97 = [];
            if (input.substr(pos, 1) === " ") {
              var result98 = " ";
              pos += 1;
            } else {
              var result98 = null;
              if (reportMatchFailures) {
                matchFailed("\" \"");
              }
            }
            while (result98 !== null) {
              result97.push(result98);
              if (input.substr(pos, 1) === " ") {
                var result98 = " ";
                pos += 1;
              } else {
                var result98 = null;
                if (reportMatchFailures) {
                  matchFailed("\" \"");
                }
              }
            }
            if (result97 !== null) {
              var result93 = [result95, result96, result97];
            } else {
              var result93 = null;
              pos = savedPos22;
            }
          } else {
            var result93 = null;
            pos = savedPos22;
          }
        } else {
          var result93 = null;
          pos = savedPos22;
        }
        var result94 = result93 !== null
          ? (function() { return uParameter; })()
          : null;
        if (result94 !== null) {
          var result92 = result94;
        } else {
          var result92 = null;
          pos = savedPos21;
        }
        if (result92 !== null) {
          var result0 = result92;
        } else {
          var savedPos19 = pos;
          var savedPos20 = pos;
          var result87 = [];
          if (input.substr(pos, 1) === " ") {
            var result91 = " ";
            pos += 1;
          } else {
            var result91 = null;
            if (reportMatchFailures) {
              matchFailed("\" \"");
            }
          }
          while (result91 !== null) {
            result87.push(result91);
            if (input.substr(pos, 1) === " ") {
              var result91 = " ";
              pos += 1;
            } else {
              var result91 = null;
              if (reportMatchFailures) {
                matchFailed("\" \"");
              }
            }
          }
          if (result87 !== null) {
            if (input.substr(pos, 1) === "v") {
              var result88 = "v";
              pos += 1;
            } else {
              var result88 = null;
              if (reportMatchFailures) {
                matchFailed("\"v\"");
              }
            }
            if (result88 !== null) {
              var result89 = [];
              if (input.substr(pos, 1) === " ") {
                var result90 = " ";
                pos += 1;
              } else {
                var result90 = null;
                if (reportMatchFailures) {
                  matchFailed("\" \"");
                }
              }
              while (result90 !== null) {
                result89.push(result90);
                if (input.substr(pos, 1) === " ") {
                  var result90 = " ";
                  pos += 1;
                } else {
                  var result90 = null;
                  if (reportMatchFailures) {
                    matchFailed("\" \"");
                  }
                }
              }
              if (result89 !== null) {
                var result85 = [result87, result88, result89];
              } else {
                var result85 = null;
                pos = savedPos20;
              }
            } else {
              var result85 = null;
              pos = savedPos20;
            }
          } else {
            var result85 = null;
            pos = savedPos20;
          }
          var result86 = result85 !== null
            ? (function() { return vParameter; })()
            : null;
          if (result86 !== null) {
            var result84 = result86;
          } else {
            var result84 = null;
            pos = savedPos19;
          }
          if (result84 !== null) {
            var result0 = result84;
          } else {
            var savedPos17 = pos;
            var savedPos18 = pos;
            var result79 = [];
            if (input.substr(pos, 1) === " ") {
              var result83 = " ";
              pos += 1;
            } else {
              var result83 = null;
              if (reportMatchFailures) {
                matchFailed("\" \"");
              }
            }
            while (result83 !== null) {
              result79.push(result83);
              if (input.substr(pos, 1) === " ") {
                var result83 = " ";
                pos += 1;
              } else {
                var result83 = null;
                if (reportMatchFailures) {
                  matchFailed("\" \"");
                }
              }
            }
            if (result79 !== null) {
              if (input.substr(pos, 1) === "t") {
                var result80 = "t";
                pos += 1;
              } else {
                var result80 = null;
                if (reportMatchFailures) {
                  matchFailed("\"t\"");
                }
              }
              if (result80 !== null) {
                var result81 = [];
                if (input.substr(pos, 1) === " ") {
                  var result82 = " ";
                  pos += 1;
                } else {
                  var result82 = null;
                  if (reportMatchFailures) {
                    matchFailed("\" \"");
                  }
                }
                while (result82 !== null) {
                  result81.push(result82);
                  if (input.substr(pos, 1) === " ") {
                    var result82 = " ";
                    pos += 1;
                  } else {
                    var result82 = null;
                    if (reportMatchFailures) {
                      matchFailed("\" \"");
                    }
                  }
                }
                if (result81 !== null) {
                  var result77 = [result79, result80, result81];
                } else {
                  var result77 = null;
                  pos = savedPos18;
                }
              } else {
                var result77 = null;
                pos = savedPos18;
              }
            } else {
              var result77 = null;
              pos = savedPos18;
            }
            var result78 = result77 !== null
              ? (function() { return tParameter; })()
              : null;
            if (result78 !== null) {
              var result76 = result78;
            } else {
              var result76 = null;
              pos = savedPos17;
            }
            if (result76 !== null) {
              var result0 = result76;
            } else {
              var savedPos15 = pos;
              var savedPos16 = pos;
              var result71 = [];
              if (input.substr(pos, 1) === " ") {
                var result75 = " ";
                pos += 1;
              } else {
                var result75 = null;
                if (reportMatchFailures) {
                  matchFailed("\" \"");
                }
              }
              while (result75 !== null) {
                result71.push(result75);
                if (input.substr(pos, 1) === " ") {
                  var result75 = " ";
                  pos += 1;
                } else {
                  var result75 = null;
                  if (reportMatchFailures) {
                    matchFailed("\" \"");
                  }
                }
              }
              if (result71 !== null) {
                var result72 = parse_number();
                if (result72 !== null) {
                  var result73 = [];
                  if (input.substr(pos, 1) === " ") {
                    var result74 = " ";
                    pos += 1;
                  } else {
                    var result74 = null;
                    if (reportMatchFailures) {
                      matchFailed("\" \"");
                    }
                  }
                  while (result74 !== null) {
                    result73.push(result74);
                    if (input.substr(pos, 1) === " ") {
                      var result74 = " ";
                      pos += 1;
                    } else {
                      var result74 = null;
                      if (reportMatchFailures) {
                        matchFailed("\" \"");
                      }
                    }
                  }
                  if (result73 !== null) {
                    var result69 = [result71, result72, result73];
                  } else {
                    var result69 = null;
                    pos = savedPos16;
                  }
                } else {
                  var result69 = null;
                  pos = savedPos16;
                }
              } else {
                var result69 = null;
                pos = savedPos16;
              }
              var result70 = result69 !== null
                ? (function(number) { return number; })(result69[1])
                : null;
              if (result70 !== null) {
                var result68 = result70;
              } else {
                var result68 = null;
                pos = savedPos15;
              }
              if (result68 !== null) {
                var result0 = result68;
              } else {
                var savedPos13 = pos;
                var savedPos14 = pos;
                if (input.substr(pos, 1) === "(") {
                  var result61 = "(";
                  pos += 1;
                } else {
                  var result61 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"(\"");
                  }
                }
                if (result61 !== null) {
                  var result62 = [];
                  if (input.substr(pos, 1) === " ") {
                    var result67 = " ";
                    pos += 1;
                  } else {
                    var result67 = null;
                    if (reportMatchFailures) {
                      matchFailed("\" \"");
                    }
                  }
                  while (result67 !== null) {
                    result62.push(result67);
                    if (input.substr(pos, 1) === " ") {
                      var result67 = " ";
                      pos += 1;
                    } else {
                      var result67 = null;
                      if (reportMatchFailures) {
                        matchFailed("\" \"");
                      }
                    }
                  }
                  if (result62 !== null) {
                    var result63 = parse_additive();
                    if (result63 !== null) {
                      var result64 = [];
                      if (input.substr(pos, 1) === " ") {
                        var result66 = " ";
                        pos += 1;
                      } else {
                        var result66 = null;
                        if (reportMatchFailures) {
                          matchFailed("\" \"");
                        }
                      }
                      while (result66 !== null) {
                        result64.push(result66);
                        if (input.substr(pos, 1) === " ") {
                          var result66 = " ";
                          pos += 1;
                        } else {
                          var result66 = null;
                          if (reportMatchFailures) {
                            matchFailed("\" \"");
                          }
                        }
                      }
                      if (result64 !== null) {
                        if (input.substr(pos, 1) === ")") {
                          var result65 = ")";
                          pos += 1;
                        } else {
                          var result65 = null;
                          if (reportMatchFailures) {
                            matchFailed("\")\"");
                          }
                        }
                        if (result65 !== null) {
                          var result59 = [result61, result62, result63, result64, result65];
                        } else {
                          var result59 = null;
                          pos = savedPos14;
                        }
                      } else {
                        var result59 = null;
                        pos = savedPos14;
                      }
                    } else {
                      var result59 = null;
                      pos = savedPos14;
                    }
                  } else {
                    var result59 = null;
                    pos = savedPos14;
                  }
                } else {
                  var result59 = null;
                  pos = savedPos14;
                }
                var result60 = result59 !== null
                  ? (function(additive) { return additive; })(result59[2])
                  : null;
                if (result60 !== null) {
                  var result58 = result60;
                } else {
                  var result58 = null;
                  pos = savedPos13;
                }
                if (result58 !== null) {
                  var result0 = result58;
                } else {
                  var savedPos11 = pos;
                  var savedPos12 = pos;
                  if (input.substr(pos, 3) === "cos") {
                    var result52 = "cos";
                    pos += 3;
                  } else {
                    var result52 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"cos\"");
                    }
                  }
                  if (result52 !== null) {
                    var result53 = [];
                    if (input.substr(pos, 1) === " ") {
                      var result57 = " ";
                      pos += 1;
                    } else {
                      var result57 = null;
                      if (reportMatchFailures) {
                        matchFailed("\" \"");
                      }
                    }
                    while (result57 !== null) {
                      result53.push(result57);
                      if (input.substr(pos, 1) === " ") {
                        var result57 = " ";
                        pos += 1;
                      } else {
                        var result57 = null;
                        if (reportMatchFailures) {
                          matchFailed("\" \"");
                        }
                      }
                    }
                    if (result53 !== null) {
                      if (input.substr(pos, 1) === "(") {
                        var result54 = "(";
                        pos += 1;
                      } else {
                        var result54 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"(\"");
                        }
                      }
                      if (result54 !== null) {
                        var result55 = parse_additive();
                        if (result55 !== null) {
                          if (input.substr(pos, 1) === ")") {
                            var result56 = ")";
                            pos += 1;
                          } else {
                            var result56 = null;
                            if (reportMatchFailures) {
                              matchFailed("\")\"");
                            }
                          }
                          if (result56 !== null) {
                            var result50 = [result52, result53, result54, result55, result56];
                          } else {
                            var result50 = null;
                            pos = savedPos12;
                          }
                        } else {
                          var result50 = null;
                          pos = savedPos12;
                        }
                      } else {
                        var result50 = null;
                        pos = savedPos12;
                      }
                    } else {
                      var result50 = null;
                      pos = savedPos12;
                    }
                  } else {
                    var result50 = null;
                    pos = savedPos12;
                  }
                  var result51 = result50 !== null
                    ? (function(additive) { return Shade.cos(additive); })(result50[3])
                    : null;
                  if (result51 !== null) {
                    var result49 = result51;
                  } else {
                    var result49 = null;
                    pos = savedPos11;
                  }
                  if (result49 !== null) {
                    var result0 = result49;
                  } else {
                    var savedPos9 = pos;
                    var savedPos10 = pos;
                    if (input.substr(pos, 3) === "sin") {
                      var result43 = "sin";
                      pos += 3;
                    } else {
                      var result43 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"sin\"");
                      }
                    }
                    if (result43 !== null) {
                      var result44 = [];
                      if (input.substr(pos, 1) === " ") {
                        var result48 = " ";
                        pos += 1;
                      } else {
                        var result48 = null;
                        if (reportMatchFailures) {
                          matchFailed("\" \"");
                        }
                      }
                      while (result48 !== null) {
                        result44.push(result48);
                        if (input.substr(pos, 1) === " ") {
                          var result48 = " ";
                          pos += 1;
                        } else {
                          var result48 = null;
                          if (reportMatchFailures) {
                            matchFailed("\" \"");
                          }
                        }
                      }
                      if (result44 !== null) {
                        if (input.substr(pos, 1) === "(") {
                          var result45 = "(";
                          pos += 1;
                        } else {
                          var result45 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"(\"");
                          }
                        }
                        if (result45 !== null) {
                          var result46 = parse_additive();
                          if (result46 !== null) {
                            if (input.substr(pos, 1) === ")") {
                              var result47 = ")";
                              pos += 1;
                            } else {
                              var result47 = null;
                              if (reportMatchFailures) {
                                matchFailed("\")\"");
                              }
                            }
                            if (result47 !== null) {
                              var result41 = [result43, result44, result45, result46, result47];
                            } else {
                              var result41 = null;
                              pos = savedPos10;
                            }
                          } else {
                            var result41 = null;
                            pos = savedPos10;
                          }
                        } else {
                          var result41 = null;
                          pos = savedPos10;
                        }
                      } else {
                        var result41 = null;
                        pos = savedPos10;
                      }
                    } else {
                      var result41 = null;
                      pos = savedPos10;
                    }
                    var result42 = result41 !== null
                      ? (function(additive) { return Shade.sin(additive); })(result41[3])
                      : null;
                    if (result42 !== null) {
                      var result40 = result42;
                    } else {
                      var result40 = null;
                      pos = savedPos9;
                    }
                    if (result40 !== null) {
                      var result0 = result40;
                    } else {
                      var savedPos7 = pos;
                      var savedPos8 = pos;
                      if (input.substr(pos, 3) === "tan") {
                        var result34 = "tan";
                        pos += 3;
                      } else {
                        var result34 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"tan\"");
                        }
                      }
                      if (result34 !== null) {
                        var result35 = [];
                        if (input.substr(pos, 1) === " ") {
                          var result39 = " ";
                          pos += 1;
                        } else {
                          var result39 = null;
                          if (reportMatchFailures) {
                            matchFailed("\" \"");
                          }
                        }
                        while (result39 !== null) {
                          result35.push(result39);
                          if (input.substr(pos, 1) === " ") {
                            var result39 = " ";
                            pos += 1;
                          } else {
                            var result39 = null;
                            if (reportMatchFailures) {
                              matchFailed("\" \"");
                            }
                          }
                        }
                        if (result35 !== null) {
                          if (input.substr(pos, 1) === "(") {
                            var result36 = "(";
                            pos += 1;
                          } else {
                            var result36 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"(\"");
                            }
                          }
                          if (result36 !== null) {
                            var result37 = parse_additive();
                            if (result37 !== null) {
                              if (input.substr(pos, 1) === ")") {
                                var result38 = ")";
                                pos += 1;
                              } else {
                                var result38 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\")\"");
                                }
                              }
                              if (result38 !== null) {
                                var result32 = [result34, result35, result36, result37, result38];
                              } else {
                                var result32 = null;
                                pos = savedPos8;
                              }
                            } else {
                              var result32 = null;
                              pos = savedPos8;
                            }
                          } else {
                            var result32 = null;
                            pos = savedPos8;
                          }
                        } else {
                          var result32 = null;
                          pos = savedPos8;
                        }
                      } else {
                        var result32 = null;
                        pos = savedPos8;
                      }
                      var result33 = result32 !== null
                        ? (function(additive) { return Shade.tan(additive); })(result32[3])
                        : null;
                      if (result33 !== null) {
                        var result31 = result33;
                      } else {
                        var result31 = null;
                        pos = savedPos7;
                      }
                      if (result31 !== null) {
                        var result0 = result31;
                      } else {
                        var savedPos5 = pos;
                        var savedPos6 = pos;
                        if (input.substr(pos, 4) === "cosh") {
                          var result25 = "cosh";
                          pos += 4;
                        } else {
                          var result25 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"cosh\"");
                          }
                        }
                        if (result25 !== null) {
                          var result26 = [];
                          if (input.substr(pos, 1) === " ") {
                            var result30 = " ";
                            pos += 1;
                          } else {
                            var result30 = null;
                            if (reportMatchFailures) {
                              matchFailed("\" \"");
                            }
                          }
                          while (result30 !== null) {
                            result26.push(result30);
                            if (input.substr(pos, 1) === " ") {
                              var result30 = " ";
                              pos += 1;
                            } else {
                              var result30 = null;
                              if (reportMatchFailures) {
                                matchFailed("\" \"");
                              }
                            }
                          }
                          if (result26 !== null) {
                            if (input.substr(pos, 1) === "(") {
                              var result27 = "(";
                              pos += 1;
                            } else {
                              var result27 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"(\"");
                              }
                            }
                            if (result27 !== null) {
                              var result28 = parse_additive();
                              if (result28 !== null) {
                                if (input.substr(pos, 1) === ")") {
                                  var result29 = ")";
                                  pos += 1;
                                } else {
                                  var result29 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\")\"");
                                  }
                                }
                                if (result29 !== null) {
                                  var result23 = [result25, result26, result27, result28, result29];
                                } else {
                                  var result23 = null;
                                  pos = savedPos6;
                                }
                              } else {
                                var result23 = null;
                                pos = savedPos6;
                              }
                            } else {
                              var result23 = null;
                              pos = savedPos6;
                            }
                          } else {
                            var result23 = null;
                            pos = savedPos6;
                          }
                        } else {
                          var result23 = null;
                          pos = savedPos6;
                        }
                        var result24 = result23 !== null
                          ? (function(additive) { return Shade.cosh(additive); })(result23[3])
                          : null;
                        if (result24 !== null) {
                          var result22 = result24;
                        } else {
                          var result22 = null;
                          pos = savedPos5;
                        }
                        if (result22 !== null) {
                          var result0 = result22;
                        } else {
                          var savedPos3 = pos;
                          var savedPos4 = pos;
                          if (input.substr(pos, 4) === "sinh") {
                            var result16 = "sinh";
                            pos += 4;
                          } else {
                            var result16 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"sinh\"");
                            }
                          }
                          if (result16 !== null) {
                            var result17 = [];
                            if (input.substr(pos, 1) === " ") {
                              var result21 = " ";
                              pos += 1;
                            } else {
                              var result21 = null;
                              if (reportMatchFailures) {
                                matchFailed("\" \"");
                              }
                            }
                            while (result21 !== null) {
                              result17.push(result21);
                              if (input.substr(pos, 1) === " ") {
                                var result21 = " ";
                                pos += 1;
                              } else {
                                var result21 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\" \"");
                                }
                              }
                            }
                            if (result17 !== null) {
                              if (input.substr(pos, 1) === "(") {
                                var result18 = "(";
                                pos += 1;
                              } else {
                                var result18 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"(\"");
                                }
                              }
                              if (result18 !== null) {
                                var result19 = parse_additive();
                                if (result19 !== null) {
                                  if (input.substr(pos, 1) === ")") {
                                    var result20 = ")";
                                    pos += 1;
                                  } else {
                                    var result20 = null;
                                    if (reportMatchFailures) {
                                      matchFailed("\")\"");
                                    }
                                  }
                                  if (result20 !== null) {
                                    var result14 = [result16, result17, result18, result19, result20];
                                  } else {
                                    var result14 = null;
                                    pos = savedPos4;
                                  }
                                } else {
                                  var result14 = null;
                                  pos = savedPos4;
                                }
                              } else {
                                var result14 = null;
                                pos = savedPos4;
                              }
                            } else {
                              var result14 = null;
                              pos = savedPos4;
                            }
                          } else {
                            var result14 = null;
                            pos = savedPos4;
                          }
                          var result15 = result14 !== null
                            ? (function(additive) { return Shade.sinh(additive); })(result14[3])
                            : null;
                          if (result15 !== null) {
                            var result13 = result15;
                          } else {
                            var result13 = null;
                            pos = savedPos3;
                          }
                          if (result13 !== null) {
                            var result0 = result13;
                          } else {
                            var savedPos1 = pos;
                            var savedPos2 = pos;
                            if (input.substr(pos, 4) === "tanh") {
                              var result7 = "tanh";
                              pos += 4;
                            } else {
                              var result7 = null;
                              if (reportMatchFailures) {
                                matchFailed("\"tanh\"");
                              }
                            }
                            if (result7 !== null) {
                              var result8 = [];
                              if (input.substr(pos, 1) === " ") {
                                var result12 = " ";
                                pos += 1;
                              } else {
                                var result12 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\" \"");
                                }
                              }
                              while (result12 !== null) {
                                result8.push(result12);
                                if (input.substr(pos, 1) === " ") {
                                  var result12 = " ";
                                  pos += 1;
                                } else {
                                  var result12 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\" \"");
                                  }
                                }
                              }
                              if (result8 !== null) {
                                if (input.substr(pos, 1) === "(") {
                                  var result9 = "(";
                                  pos += 1;
                                } else {
                                  var result9 = null;
                                  if (reportMatchFailures) {
                                    matchFailed("\"(\"");
                                  }
                                }
                                if (result9 !== null) {
                                  var result10 = parse_additive();
                                  if (result10 !== null) {
                                    if (input.substr(pos, 1) === ")") {
                                      var result11 = ")";
                                      pos += 1;
                                    } else {
                                      var result11 = null;
                                      if (reportMatchFailures) {
                                        matchFailed("\")\"");
                                      }
                                    }
                                    if (result11 !== null) {
                                      var result5 = [result7, result8, result9, result10, result11];
                                    } else {
                                      var result5 = null;
                                      pos = savedPos2;
                                    }
                                  } else {
                                    var result5 = null;
                                    pos = savedPos2;
                                  }
                                } else {
                                  var result5 = null;
                                  pos = savedPos2;
                                }
                              } else {
                                var result5 = null;
                                pos = savedPos2;
                              }
                            } else {
                              var result5 = null;
                              pos = savedPos2;
                            }
                            var result6 = result5 !== null
                              ? (function(additive) { return Shade.tanh(additive); })(result5[3])
                              : null;
                            if (result6 !== null) {
                              var result4 = result6;
                            } else {
                              var result4 = null;
                              pos = savedPos1;
                            }
                            if (result4 !== null) {
                              var result0 = result4;
                            } else {
                              var savedPos0 = pos;
                              if (input.substr(pos, 2) === "pi") {
                                var result2 = "pi";
                                pos += 2;
                              } else {
                                var result2 = null;
                                if (reportMatchFailures) {
                                  matchFailed("\"pi\"");
                                }
                              }
                              var result3 = result2 !== null
                                ? (function() { return Math.PI; })()
                                : null;
                              if (result3 !== null) {
                                var result1 = result3;
                              } else {
                                var result1 = null;
                                pos = savedPos0;
                              }
                              if (result1 !== null) {
                                var result0 = result1;
                              } else {
                                var result0 = null;;
                              };
                            };
                          };
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_number() {
        var cacheKey = 'number@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos2 = pos;
        var savedPos3 = pos;
        if (input.substr(pos, 1) === "-") {
          var result17 = "-";
          pos += 1;
        } else {
          var result17 = null;
          if (reportMatchFailures) {
            matchFailed("\"-\"");
          }
        }
        var result11 = result17 !== null ? result17 : '';
        if (result11 !== null) {
          var result12 = [];
          if (input.substr(pos).match(/^[0-9]/) !== null) {
            var result16 = input.charAt(pos);
            pos++;
          } else {
            var result16 = null;
            if (reportMatchFailures) {
              matchFailed("[0-9]");
            }
          }
          while (result16 !== null) {
            result12.push(result16);
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result16 = input.charAt(pos);
              pos++;
            } else {
              var result16 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
          }
          if (result12 !== null) {
            if (input.substr(pos, 1) === ".") {
              var result13 = ".";
              pos += 1;
            } else {
              var result13 = null;
              if (reportMatchFailures) {
                matchFailed("\".\"");
              }
            }
            if (result13 !== null) {
              if (input.substr(pos).match(/^[0-9]/) !== null) {
                var result15 = input.charAt(pos);
                pos++;
              } else {
                var result15 = null;
                if (reportMatchFailures) {
                  matchFailed("[0-9]");
                }
              }
              if (result15 !== null) {
                var result14 = [];
                while (result15 !== null) {
                  result14.push(result15);
                  if (input.substr(pos).match(/^[0-9]/) !== null) {
                    var result15 = input.charAt(pos);
                    pos++;
                  } else {
                    var result15 = null;
                    if (reportMatchFailures) {
                      matchFailed("[0-9]");
                    }
                  }
                }
              } else {
                var result14 = null;
              }
              if (result14 !== null) {
                var result9 = [result11, result12, result13, result14];
              } else {
                var result9 = null;
                pos = savedPos3;
              }
            } else {
              var result9 = null;
              pos = savedPos3;
            }
          } else {
            var result9 = null;
            pos = savedPos3;
          }
        } else {
          var result9 = null;
          pos = savedPos3;
        }
        var result10 = result9 !== null
          ? (function(digits) { return Shade(parseFloat(digits[0] + digits[1].join("") + "." + digits[3].join(""))); })(result9)
          : null;
        if (result10 !== null) {
          var result8 = result10;
        } else {
          var result8 = null;
          pos = savedPos2;
        }
        if (result8 !== null) {
          var result0 = result8;
        } else {
          var savedPos0 = pos;
          var savedPos1 = pos;
          if (input.substr(pos, 1) === "-") {
            var result7 = "-";
            pos += 1;
          } else {
            var result7 = null;
            if (reportMatchFailures) {
              matchFailed("\"-\"");
            }
          }
          var result4 = result7 !== null ? result7 : '';
          if (result4 !== null) {
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result6 = input.charAt(pos);
              pos++;
            } else {
              var result6 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
            if (result6 !== null) {
              var result5 = [];
              while (result6 !== null) {
                result5.push(result6);
                if (input.substr(pos).match(/^[0-9]/) !== null) {
                  var result6 = input.charAt(pos);
                  pos++;
                } else {
                  var result6 = null;
                  if (reportMatchFailures) {
                    matchFailed("[0-9]");
                  }
                }
              }
            } else {
              var result5 = null;
            }
            if (result5 !== null) {
              var result2 = [result4, result5];
            } else {
              var result2 = null;
              pos = savedPos1;
            }
          } else {
            var result2 = null;
            pos = savedPos1;
          }
          var result3 = result2 !== null
            ? (function(digits) { var x= digits[0] + digits[1].join(""); return Shade(parseInt(x, 10)); })(result2)
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function buildErrorMessage() {
        function buildExpected(failuresExpected) {
          failuresExpected.sort();
          
          var lastFailure = null;
          var failuresExpectedUnique = [];
          for (var i = 0; i < failuresExpected.length; i++) {
            if (failuresExpected[i] !== lastFailure) {
              failuresExpectedUnique.push(failuresExpected[i]);
              lastFailure = failuresExpected[i];
            }
          }
          
          switch (failuresExpectedUnique.length) {
            case 0:
              return 'end of input';
            case 1:
              return failuresExpectedUnique[0];
            default:
              return failuresExpectedUnique.slice(0, failuresExpectedUnique.length - 1).join(', ')
                + ' or '
                + failuresExpectedUnique[failuresExpectedUnique.length - 1];
          }
        }
        
        var expected = buildExpected(rightmostMatchFailuresExpected);
        var actualPos = Math.max(pos, rightmostMatchFailuresPos);
        var actual = actualPos < input.length
          ? quote(input.charAt(actualPos))
          : 'end of input';
        
        return 'Expected ' + expected + ' but ' + actual + ' found.';
      }
      
      function computeErrorPosition() {
        /*
         * The first idea was to use |String.split| to break the input up to the
         * error position along newlines and derive the line and column from
         * there. However IE's |split| implementation is so broken that it was
         * enough to prevent it.
         */
        
        var line = 1;
        var column = 1;
        var seenCR = false;
        
        for (var i = 0; i <  rightmostMatchFailuresPos; i++) {
          var ch = input.charAt(i);
          if (ch === '\n') {
            if (!seenCR) { line++; }
            column = 1;
            seenCR = false;
          } else if (ch === '\r' | ch === '\u2028' || ch === '\u2029') {
            line++;
            column = 1;
            seenCR = true;
          } else {
            column++;
            seenCR = false;
          }
        }
        
        return { line: line, column: column };
      }
      
      
      
      var result = parseFunctions[startRule]();
      
      /*
       * The parser is now in one of the following three states:
       *
       * 1. The parser successfully parsed the whole input.
       *
       *    - |result !== null|
       *    - |pos === input.length|
       *    - |rightmostMatchFailuresExpected| may or may not contain something
       *
       * 2. The parser successfully parsed only a part of the input.
       *
       *    - |result !== null|
       *    - |pos < input.length|
       *    - |rightmostMatchFailuresExpected| may or may not contain something
       *
       * 3. The parser did not successfully parse any part of the input.
       *
       *   - |result === null|
       *   - |pos === 0|
       *   - |rightmostMatchFailuresExpected| contains at least one failure
       *
       * All code following this comment (including called functions) must
       * handle these states.
       */
      if (result === null || pos !== input.length) {
        var errorPosition = computeErrorPosition();
        throw new this.SyntaxError(
          buildErrorMessage(),
          errorPosition.line,
          errorPosition.column
        );
      }
      
      return result;
    },
    
    /* Returns the parser source code. */
    toSource: function() { return this._source; }
  };
  
  /* Thrown when a parser encounters a syntax error. */
  
  result.SyntaxError = function(message, line, column) {
    this.name = 'SyntaxError';
    this.message = message;
    this.line = line;
    this.column = column;
  };
  
  result.SyntaxError.prototype = Error.prototype;
  
  return result;
})();
